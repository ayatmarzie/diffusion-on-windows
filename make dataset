# Load standard JSON list
with open('input.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

# Save as compact JSON Lines
with open('output.jsonl', 'w', encoding='utf-8') as f:
    for item in data:
        json.dump(item, f, ensure_ascii=False)
        f.write('\n')

import json

# Assume `data` is a list of dictionaries
with open('output.jsonl', 'w', encoding='utf-8') as f:
    for entry in data:
        json.dump(entry, f, ensure_ascii=False)
        f.write('\n')



import json

data = []
with open('your_file.json', 'r', encoding='utf-8') as f:
    for line in f:
        data.append(json.loads(line))



from difflib import SequenceMatcher
import json

# Load JSON
with open('your_data.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

# Group by trg, keeping best src based on similarity
from collections import defaultdict

best_entries = {}
scores = defaultdict(float)

for entry in data:
    trg = entry['trg']
    src = entry['src']
    sim = SequenceMatcher(None, src, trg).ratio()

    if sim > scores[trg]:
        scores[trg] = sim
        best_entries[trg] = entry

# Save results
with open('best_data.json', 'w', encoding='utf-8') as f:
    json.dump(list(best_entries.values()), f, ensure_ascii=False, indent=2)
